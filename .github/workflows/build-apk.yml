name: Build Flet APK

on:
  push:
    branches:
      - master
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install/upgrade Flet CLI
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade flet flet-cli

      - name: Setup Flutter (base version)
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'

      - name: Switch Flutter to desired version (3.31.0)
        run: |
          echo "FLUTTER_ROOT is: $FLUTTER_ROOT"
          cd "$FLUTTER_ROOT"
          git fetch --tags --force
          git checkout 3.31.0 || git checkout tags/3.31.0
          flutter --version

      - name: Flutter doctor
        run: flutter doctor -v

      - name: Accept Android Licenses
        run: yes | flutter doctor --android-licenses

      - name: Ensure Flutter packages (optional)
        run: |
          # If your project is a Flet app, this is usually handled by flet build,
          # but running pub get here helps avoid some dependency issues.
          cd $GITHUB_WORKSPACE
          flutter pub get || true

      - name: Build APK with Flet
        run: |
          cd $GITHUB_WORKSPACE
          # If your entry point is main.py in repo root this is enough:
          flet build apk --release

          # If your entrypoint is not main.py in root, use:
          # flet build apk --release --module-name path.to.module

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/**
